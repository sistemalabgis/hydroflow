
Aviso! Foi encontrada uma relação inesperada na hierarquização Strahler! A Feição FID999 recebe mais de dois afluentes em um mesmo ponto.
Os identificadores desses afluentes são:
   1 - FID999
   2 - FID999
   3 - FID999

O resultado final não apresentará a classificação por Strahler.

===========================================================================

Erro! Impossível continuar! Foi encontrada uma topologia em anel na rede de drenagem.
Verifique a lista de feições em anel:










		//Quantidade de filhos > 0!

                // Validando método Strahler.
                if ((filhos.size() > 2) && (params->getEOrdemStrahler())) {
                    params->setEOrdemStrahler(false); //Desabilitando a classificação por Strahler!

                    //Gerando mensagem no log de processamento.
                    Segmento filho;
                    QString msg_1 = QObject::tr("Aviso! Foi encontrada uma relação inesperada na hierarquização Strahler! A Feição FID");
                    QString msg_2 = QObject::tr(" recebe mais de dois afluentes em um mesmo ponto.");
                    QString msg_3 = QObject::tr("Os identificadores desses afluentes são:");
                    QString msg_4 = QObject::tr("O resultado final não apresentará a classificação por Strahler.");
                    saida->append(msg_1 + QString::number(segmento->getIdFeicao()) + msg_2 + "\n" + msg_3);
                    for (int i = 0; i < filhos.size(); ++i) {
                        filho = filhos[i];
                        saida->append("   " + QString::number(i + 1) + " - FID" + QString::number(filho.getIdFeicao()));
                    }
                    saida->append("\n" + msg_4);
                    resultado = 1;
                }

                No *noFilho = 0;
                Segmento *segAux = new Segmento();
                for (int i = 0; i < filhos.size(); ++i) {
                    *segAux = filhos[i];
                    noFilho = criarNo(segAux, novoPai, filhos, resultado, loop);
                    if ((resultado == 0) || (resultado == 1)) {

                        //Classificando por Strahler
                        if (params->getEOrdemStrahler()) {
                            no->setStrahler2(noFilho->getStrahler());
                        }

                        //Classificando por Shreve.
                        if (params->getEOrdemShreve()) {
                            no->setShreve2(noFilho->getShreve());
                        }
                    } else if ((resultado == 6) && (loop != -1)) {
                        saida->append("   FID" + QString::number(feicao->getId()));
                        if (feicao->getId() == loop) {
                            QString msg_7 = QObject::tr("Consulte a documentação deste aplicativo para mais detalhes.");
                            QString msg_8 = QObject::tr("Confira a topologia e execute o processamento novamente.");
                            saida->append(msg_7 + "\n" + msg_8);
                            loop = -1;
                        }
                        break;
                    }
                    delete noFilho;
                }
                delete segAux;


================================================================

void No::setStrahler2(int valor)
{
    if (this->strahler == valor) {
        this->strahler = this->strahler +1;
    } else if (this->strahler < valor) {
        this->strahler = valor;
    }
}


void No::setShreve2(int shreve)
{
    this->shreve = this->shreve + shreve;
}